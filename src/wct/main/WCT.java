package wct.main;

import java.awt.Dimension;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.PointerInfo;
import java.awt.Toolkit;
import java.awt.Window;
import java.io.File;
import java.io.IOException;
import java.text.MessageFormat;
import java.util.ResourceBundle;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import lc.kra.system.keyboard.GlobalKeyboardHook;
import lc.kra.system.keyboard.event.GlobalKeyAdapter;
import lc.kra.system.keyboard.event.GlobalKeyEvent;
import org.apache.commons.io.FileUtils;
import org.apache.commons.lang3.StringUtils;
import wct.background.CommonParams;
import wct.background.CopiesGenerator;
import wct.background.CopiesGeneratorParams;
import wct.background.FileSender;
import wct.background.FileSenderParams;
import wct.background.MouseDetector;
import wct.background.MouseDetectorParams;
import wct.background.TextSender;
import wct.background.TextSenderParams;
import wct.configuration.Configuration;
import wct.configuration.ConfigurationHandler;
import wct.multilanguage.LanguageHandler;
import wct.resourses.Coordinate;

/**
 *
 * @author xuanlinhha
 */
public class WCT extends javax.swing.JFrame {

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel0 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jButton14 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jButton15 = new javax.swing.JButton();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jTextField15 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel19 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jTextField16 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jLabel20 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jTextField18 = new javax.swing.JTextField();
        jTextField19 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jTextField21 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("wct/main/Bundle"); // NOI18N
        setTitle(bundle.getString("WCT.title")); // NOI18N
        setPreferredSize(new java.awt.Dimension(900, 600));

        jPanel0.setLayout(new java.awt.CardLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel4.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText(bundle.getString("WCT.jLabel4.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jLabel4, gridBagConstraints);

        jTextField2.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.2;
        jPanel1.add(jTextField2, gridBagConstraints);

        jButton2.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jButton2.setText(bundle.getString("WCT.jButton2.text")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        jPanel1.add(jButton2, gridBagConstraints);

        jButton3.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jButton3.setText(bundle.getString("WCT.jButton3.text")); // NOI18N
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        jPanel1.add(jButton3, gridBagConstraints);

        jLabel11.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText(bundle.getString("WCT.jLabel11.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jLabel11, gridBagConstraints);

        jTextField9.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jTextField9.setText("8"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        jPanel1.add(jTextField9, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("MingLiU", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(bundle.getString("WCT.jLabel1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText(bundle.getString("WCT.jLabel2.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jLabel2, gridBagConstraints);

        jTextField1.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jTextField1, gridBagConstraints);

        jButton1.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jButton1.setText(bundle.getString("WCT.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jButton1, gridBagConstraints);

        jButton6.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jButton6.setText(bundle.getString("WCT.jButton6.text")); // NOI18N
        jButton6.setEnabled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jButton6, gridBagConstraints);

        jLabel12.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText(bundle.getString("WCT.jLabel12.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jLabel12, gridBagConstraints);

        jComboBox1.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jComboBox1.setModel(loadComboboxModel());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jComboBox1, gridBagConstraints);

        jButton12.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jButton12.setText(bundle.getString("WCT.jButton12.text")); // NOI18N
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jButton12, gridBagConstraints);

        jButton13.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jButton13.setText(bundle.getString("WCT.jButton13.text")); // NOI18N
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jButton13, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("MingLiU", 1, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText(bundle.getString("WCT.jLabel5.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jLabel5, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText(bundle.getString("WCT.jLabel7.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jLabel7, gridBagConstraints);

        jTextField12.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jTextField12, gridBagConstraints);

        jButton14.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jButton14.setText(bundle.getString("WCT.jButton14.text")); // NOI18N
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jButton14, gridBagConstraints);

        jLabel18.setFont(new java.awt.Font("MingLiU", 1, 24)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText(bundle.getString("WCT.jLabel18.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        jPanel1.add(jLabel18, gridBagConstraints);

        jButton15.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jButton15.setText(bundle.getString("WCT.jButton15.text")); // NOI18N
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jButton15, gridBagConstraints);

        jCheckBox3.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jCheckBox3.setSelected(true);
        jCheckBox3.setText(bundle.getString("WCT.jCheckBox3.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jCheckBox3, gridBagConstraints);

        jCheckBox4.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jCheckBox4.setText(bundle.getString("WCT.jCheckBox4.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        jPanel1.add(jCheckBox4, gridBagConstraints);

        jTextField15.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jTextField15, gridBagConstraints);

        jPanel0.add(jPanel1, "card2");

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel6.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText(bundle.getString("WCT.jLabel6.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel2.add(jLabel6, gridBagConstraints);

        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 0.8;
        jPanel2.add(jScrollPane2, gridBagConstraints);

        jLabel19.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText(bundle.getString("WCT.jLabel19.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel2.add(jLabel19, gridBagConstraints);

        jTextField4.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel2.add(jTextField4, gridBagConstraints);

        jButton10.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jButton10.setText(bundle.getString("WCT.jButton10.text")); // NOI18N
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.4;
        jPanel2.add(jButton10, gridBagConstraints);

        jButton11.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jButton11.setText(bundle.getString("WCT.jButton11.text")); // NOI18N
        jButton11.setEnabled(false);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.4;
        jPanel2.add(jButton11, gridBagConstraints);

        jLabel13.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jLabel13.setText(bundle.getString("WCT.jLabel13.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel2.add(jLabel13, gridBagConstraints);

        jComboBox2.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jComboBox2.setModel(loadComboboxModel());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel2.add(jComboBox2, gridBagConstraints);

        jTextField16.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel2.add(jTextField16, gridBagConstraints);

        jPanel0.add(jPanel2, "card5");

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel8.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText(bundle.getString("WCT.jLabel8.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jLabel8, gridBagConstraints);

        jTextField6.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.8;
        jPanel3.add(jTextField6, gridBagConstraints);

        jButton7.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jButton7.setText(bundle.getString("WCT.jButton7.text")); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jButton7, gridBagConstraints);

        jLabel9.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText(bundle.getString("WCT.jLabel9.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jLabel9, gridBagConstraints);

        jTextField7.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.8;
        jPanel3.add(jTextField7, gridBagConstraints);

        jButton8.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jButton8.setText(bundle.getString("WCT.jButton8.text")); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jButton8, gridBagConstraints);

        jLabel10.setFont(new java.awt.Font("MingLiU", 1, 24)); // NOI18N
        jLabel10.setText(bundle.getString("WCT.jLabel10.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jLabel10, gridBagConstraints);

        jButton9.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jButton9.setText(bundle.getString("WCT.jButton9.text")); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jButton9, gridBagConstraints);

        jLabel17.setFont(new java.awt.Font("MingLiU", 1, 24)); // NOI18N
        jLabel17.setText(bundle.getString("WCT.jLabel17.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        jPanel3.add(jLabel17, gridBagConstraints);

        jLabel22.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel22.setText(bundle.getString("WCT.jLabel22.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jLabel22, gridBagConstraints);

        jTextField17.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jTextField17.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField17FocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.2;
        jPanel3.add(jTextField17, gridBagConstraints);

        jLabel14.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText(bundle.getString("WCT.jLabel14.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jLabel14, gridBagConstraints);

        jTextField3.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jTextField3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField3FocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        jPanel3.add(jTextField3, gridBagConstraints);

        jLabel15.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText(bundle.getString("WCT.jLabel15.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jLabel15, gridBagConstraints);

        jTextField5.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jTextField5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField5FocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jTextField5, gridBagConstraints);

        jLabel16.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText(bundle.getString("WCT.jLabel16.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jLabel16, gridBagConstraints);

        jTextField8.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jTextField8.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField8FocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jTextField8, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("MingLiU", 1, 24)); // NOI18N
        jLabel3.setText(bundle.getString("WCT.jLabel3.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jLabel3, gridBagConstraints);

        jButton16.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jButton16.setText(bundle.getString("WCT.jButton16.text")); // NOI18N
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jButton16, gridBagConstraints);

        jButton17.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jButton17.setText(bundle.getString("WCT.jButton17.text")); // NOI18N
        jButton17.setEnabled(false);
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jButton17, gridBagConstraints);

        jTextArea3.setColumns(20);
        jTextArea3.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 0.1;
        jPanel3.add(jScrollPane3, gridBagConstraints);

        jLabel20.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jLabel20.setText(bundle.getString("WCT.jLabel20.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jLabel20, gridBagConstraints);

        jTextField10.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.2;
        jPanel3.add(jTextField10, gridBagConstraints);

        jLabel21.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText(bundle.getString("WCT.jLabel21.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jLabel21, gridBagConstraints);

        jTextField11.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jTextField11.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField11FocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jTextField11, gridBagConstraints);

        jLabel23.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel23.setText(bundle.getString("WCT.jLabel23.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jLabel23, gridBagConstraints);

        jTextField13.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jTextField13.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField13FocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jTextField13, gridBagConstraints);

        jLabel24.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel24.setText(bundle.getString("WCT.jLabel24.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jLabel24, gridBagConstraints);

        jTextField14.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jTextField14.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField14FocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jTextField14, gridBagConstraints);

        jLabel25.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel25.setText(bundle.getString("WCT.jLabel25.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jLabel25, gridBagConstraints);

        jTextField18.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jTextField18.setText("3"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jTextField18, gridBagConstraints);

        jTextField19.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jTextField19, gridBagConstraints);

        jCheckBox1.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jCheckBox1.setSelected(true);
        jCheckBox1.setText(bundle.getString("WCT.jCheckBox1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jCheckBox1, gridBagConstraints);

        jLabel26.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel26.setText(bundle.getString("WCT.jLabel26.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jLabel26, gridBagConstraints);

        jLabel27.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel27.setText(bundle.getString("WCT.jLabel27.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jLabel27, gridBagConstraints);

        jTextField21.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jTextField21.setText("20"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jTextField21, gridBagConstraints);

        jButton4.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jButton4.setText(bundle.getString("WCT.jButton4.text")); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jButton4, gridBagConstraints);

        jLabel28.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jLabel28.setText("(groups)"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jLabel28, gridBagConstraints);

        jPanel0.add(jPanel3, "card4");

        jMenu1.setText(bundle.getString("WCT.jMenu1.text")); // NOI18N
        jMenu1.setFont(new java.awt.Font("MingLiU", 1, 24)); // NOI18N

        jMenuItem1.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jMenuItem1.setText(bundle.getString("WCT.jMenuItem1.text")); // NOI18N
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem4.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jMenuItem4.setText(bundle.getString("WCT.jMenuItem4.text")); // NOI18N
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);
        jMenu1.add(jSeparator1);

        jMenuItem3.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jMenuItem3.setText(bundle.getString("WCT.jMenuItem3.text")); // NOI18N
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText(bundle.getString("WCT.jMenu2.text")); // NOI18N
        jMenu2.setFont(new java.awt.Font("MingLiU", 1, 24)); // NOI18N

        jMenuItem5.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jMenuItem5.setText(bundle.getString("WCT.jMenuItem5.text")); // NOI18N
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem6.setFont(new java.awt.Font("MingLiU", 0, 18)); // NOI18N
        jMenuItem6.setText(bundle.getString("WCT.jMenuItem6.text")); // NOI18N
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel0, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (checkFSParams(fsParams)) {
            // run
            int input = JOptionPane.showConfirmDialog(null, bundle.getString("start_question"), bundle.getString("confirm_title"),
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (input == 0) { // YES
                // create hook and set to fsParams
                createGKBForStop();
                fsParams.setKeyboardHook(keyboardHook);
                // init file sender and start
                fileSender = new FileSender();
                fileSender.setFsParams(fsParams);
                fileSender.execute();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void initFSParam() {
        fsParams = new FileSenderParams();
        fsParams.setOptionJComboBox(jComboBox1);
        fsParams.setStartJButton(jButton2);
        fsParams.setStopJButton(jButton3);
    }

    private boolean checkFSParams(FileSenderParams fsParams) {
        if (!checkCommonParams(fsParams)) {
            return false;
        }
        // input folder
        if (StringUtils.isBlank(jTextField6.getText())) {
            JOptionPane.showMessageDialog(this, bundle.getString("no_input_folder"), bundle.getString("config_error"), JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            fsParams.setInputFolder(jTextField6.getText());
        }

        fsParams.setIsClean(jCheckBox1.isSelected());
        if (jCheckBox1.isSelected()) {
            // clean folder
            if (StringUtils.isBlank(jTextField19.getText())) {
                JOptionPane.showMessageDialog(this, bundle.getString("no_clean_folder"), bundle.getString("config_error"), JOptionPane.ERROR_MESSAGE);
                return false;
            } else {
                fsParams.setCleanFolder(jTextField19.getText());
            }

            // clean after sending
            if (StringUtils.isBlank(jTextField21.getText())) {
                JOptionPane.showMessageDialog(this, bundle.getString("no_clean_after_sending"), bundle.getString("config_error"), JOptionPane.ERROR_MESSAGE);
                return false;
            } else {
                fsParams.setCleanAfterSending(Integer.parseInt(jTextField21.getText()));
            }
        }

        // no down times
        if (StringUtils.isBlank(jTextField2.getText())) {
            JOptionPane.showMessageDialog(this, bundle.getString("missing_down_times"), bundle.getString("input_missing"), JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            fsParams.setTotalGroups(Integer.parseInt(jTextField2.getText()));
        }
        // no up times
        if (StringUtils.isBlank(jTextField15.getText())) {
            JOptionPane.showMessageDialog(this, bundle.getString("missing_up_times"), bundle.getString("input_missing"), JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            fsParams.setTopGroups(Integer.parseInt(jTextField15.getText()));
        }
        // sending time
        if (StringUtils.isBlank(jTextField9.getText())) {
            JOptionPane.showMessageDialog(this, bundle.getString("missing_sending_time"), bundle.getString("input_missing"), JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            fsParams.setSendingTime(Long.parseLong(jTextField9.getText()));
        }

        fsParams.setOneByOne(jCheckBox4.isSelected());
        fsParams.setShutdownAfterFinish(jCheckBox3.isSelected());

        return true;
    }

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        setPanel(1);
        this.setAlwaysOnTop(false);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        setPanel(3);
        this.setAlwaysOnTop(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle(bundle.getString("choose_input"));
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fc.setAcceptAllFileFilterUsed(false);
        if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            jTextField6.setText(fc.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle(bundle.getString("choose_output"));
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fc.setAcceptAllFileFilterUsed(false);
        if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            jTextField7.setText(fc.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        Configuration config = new Configuration();
        config.setInputFolder(jTextField6.getText());
        config.setOutputFolder(jTextField7.getText());
        config.setCleanFolder(jTextField19.getText());
        config.setCleanAfterSending(jTextField21.getText());
        config.setIsClean(jCheckBox1.isSelected());
        config.setOnTaskbarCoordinate(jTextField17.getText());
        config.setGroupsInRegion(jTextField10.getText());
        config.setCorner1(jTextField5.getText());
        config.setCorner2(jTextField8.getText());
        config.setCorner3(jTextField13.getText());
        config.setCorner4(jTextField14.getText());
        config.setScroll1(jTextField3.getText());
        config.setScroll2(jTextField11.getText());
        config.setTimesToBottom(jTextField18.getText());

        try {
            ConfigurationHandler.save(config);
            JOptionPane.showMessageDialog(this, bundle.getString("save_config_success"), bundle.getString("success"), JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, bundle.getString("save_config_error"), bundle.getString("error"), JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        keyboardHook.shutdownHook();
        stopFileSender();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void stopFileSender() {
        if (fileSender != null) {
            if (fileSender.cancel(true)) {
                JOptionPane.showMessageDialog(null, MessageFormat.format(bundle.getString("result_message"), fileSender.getCounter()), bundle.getString("result_title"), JOptionPane.INFORMATION_MESSAGE);
                fileSender = null;
            }
        }
    }
    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        JOptionPane.showMessageDialog(this, bundle.getString("help_contents_message"), bundle.getString("help_contents"), JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        JOptionPane.showMessageDialog(this, bundle.getString("about_message"), bundle.getString("about"), JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        setPanel(2);
        this.setAlwaysOnTop(false);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed

        if (checkTSParams(tsParams)) {
            // run
            int input = JOptionPane.showConfirmDialog(null, bundle.getString("start_question"), bundle.getString("confirm_title"),
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (input == 0) { // YES
                // create hook and set to tsParams
                createGKBForStop();
                tsParams.setKeyboardHook(keyboardHook);
                // init text sender and start
                textSender = new TextSender();
                textSender.setTsParams(tsParams);
                textSender.execute();
            }
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void initTSParams() {
        tsParams = new TextSenderParams();
        tsParams.setOptionJComboBox(jComboBox2);
        tsParams.setStartJButton(jButton10);
        tsParams.setStopJButton(jButton11);
    }

    private boolean checkTSParams(TextSenderParams tsParams) {
        if (!checkCommonParams(tsParams)) {
            return false;
        }
        // text
        if (StringUtils.isBlank(jTextArea2.getText().trim())) {
            JOptionPane.showMessageDialog(this, bundle.getString("missing_text"), bundle.getString("input_missing"), JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            tsParams.setText(jTextArea2.getText().trim());
        }
        // no down times
        if (StringUtils.isBlank(jTextField4.getText())) {
            JOptionPane.showMessageDialog(this, bundle.getString("missing_down_times"), bundle.getString("input_missing"), JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            tsParams.setTotalGroups(Integer.parseInt(jTextField4.getText()));
        }
        // no up times
        if (StringUtils.isBlank(jTextField16.getText())) {
            JOptionPane.showMessageDialog(this, bundle.getString("missing_up_times"), bundle.getString("input_missing"), JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            tsParams.setTopGroups(Integer.parseInt(jTextField16.getText()));
        }

        return true;
    }

    private boolean checkCommonParams(CommonParams commonParams) {
        // on taskbar coordinate
        if (StringUtils.isBlank(jTextField17.getText())) {
            JOptionPane.showMessageDialog(this, bundle.getString("no_on_taskbar_coordinate"), bundle.getString("config_error"), JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            String[] sdata = jTextField17.getText().split(" ");
            Coordinate tmp = new Coordinate();
            tmp.setX(Integer.parseInt(sdata[0]));
            tmp.setY(Integer.parseInt(sdata[1]));
            commonParams.setOnTaskbarCoordinate(tmp);
        }
        // group in region
        if (StringUtils.isBlank(jTextField10.getText())) {
            JOptionPane.showMessageDialog(this, bundle.getString("no_groups_in_region"), bundle.getString("config_error"), JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            commonParams.setGroupsInRegion(Integer.parseInt(jTextField10.getText()));
        }
        // corner 1
        if (StringUtils.isBlank(jTextField5.getText())) {
            JOptionPane.showMessageDialog(this, bundle.getString("no_corner_1"), bundle.getString("config_error"), JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            String[] sdata = jTextField5.getText().split(" ");
            Coordinate tmp = new Coordinate();
            tmp.setX(Integer.parseInt(sdata[0]));
            tmp.setY(Integer.parseInt(sdata[1]));
            commonParams.setCorner1(tmp);
        }
        // corner 2
        if (StringUtils.isBlank(jTextField8.getText())) {
            JOptionPane.showMessageDialog(this, bundle.getString("no_corner_2"), bundle.getString("config_error"), JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            String[] sdata = jTextField8.getText().split(" ");
            Coordinate tmp = new Coordinate();
            tmp.setX(Integer.parseInt(sdata[0]));
            tmp.setY(Integer.parseInt(sdata[1]));
            commonParams.setCorner2(tmp);
        }
        // corner 3
        if (StringUtils.isBlank(jTextField13.getText())) {
            JOptionPane.showMessageDialog(this, bundle.getString("no_corner_3"), bundle.getString("config_error"), JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            String[] sdata = jTextField13.getText().split(" ");
            Coordinate tmp = new Coordinate();
            tmp.setX(Integer.parseInt(sdata[0]));
            tmp.setY(Integer.parseInt(sdata[1]));
            commonParams.setCorner3(tmp);
        }
        // corner 4
        if (StringUtils.isBlank(jTextField14.getText())) {
            JOptionPane.showMessageDialog(this, bundle.getString("no_corner_4"), bundle.getString("config_error"), JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            String[] sdata = jTextField14.getText().split(" ");
            Coordinate tmp = new Coordinate();
            tmp.setX(Integer.parseInt(sdata[0]));
            tmp.setY(Integer.parseInt(sdata[1]));
            commonParams.setCorner4(tmp);
        }

        // scroll 1
        if (StringUtils.isBlank(jTextField3.getText())) {
            JOptionPane.showMessageDialog(this, bundle.getString("no_scroll1"), bundle.getString("config_error"), JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            String[] sdata = jTextField3.getText().split(" ");
            Coordinate tmp = new Coordinate();
            tmp.setX(Integer.parseInt(sdata[0]));
            tmp.setY(Integer.parseInt(sdata[1]));
            commonParams.setScroll1(tmp);
        }
        // scroll 2
        if (StringUtils.isBlank(jTextField11.getText())) {
            JOptionPane.showMessageDialog(this, bundle.getString("no_scroll2"), bundle.getString("config_error"), JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            String[] sdata = jTextField11.getText().split(" ");
            Coordinate tmp = new Coordinate();
            tmp.setX(Integer.parseInt(sdata[0]));
            tmp.setY(Integer.parseInt(sdata[1]));
            commonParams.setScroll2(tmp);
        }

        // times to bottom
        if (StringUtils.isBlank(jTextField18.getText())) {
            JOptionPane.showMessageDialog(this, bundle.getString("no_times_to_bottom"), bundle.getString("config_error"), JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            commonParams.setTimesToBottom(Integer.parseInt(jTextField18.getText()));
        }

        return true;
    }

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        keyboardHook.shutdownHook();
        stopTextSender();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void stopTextSender() {
        if (textSender != null) {
            if (textSender.cancel(true)) {
                JOptionPane.showMessageDialog(null, MessageFormat.format(bundle.getString("result_message"), textSender.getCounter()), bundle.getString("result_title"), JOptionPane.INFORMATION_MESSAGE);
                textSender = null;
            }
        }
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        copiesGenerator = new CopiesGenerator();
        copiesGenerator.setCgParams(cgParams);
        if (checkCGParams(cgParams)) {
            copiesGenerator.execute();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void initCGParams() {
        cgParams = new CopiesGeneratorParams();
        cgParams.setGenerateJButton(jButton1);
        cgParams.setStopJButton(jButton6);

    }

    private boolean checkCGParams(CopiesGeneratorParams cgParams) {
        // input folder
        if (StringUtils.isBlank(jTextField6.getText())) {
            JOptionPane.showMessageDialog(this, bundle.getString("no_input_folder"), bundle.getString("config_error"), JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            cgParams.setInputFolder(jTextField6.getText());
        }
        // output folder
        if (StringUtils.isBlank(jTextField7.getText())) {
            JOptionPane.showMessageDialog(this, bundle.getString("no_output_folder"), bundle.getString("config_error"), JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            cgParams.setOutputFolder(jTextField7.getText());
        }
        // input and output folder must be different
        if (jTextField6.getText().equals(jTextField7.getText())) {
            JOptionPane.showMessageDialog(this, bundle.getString("input_output_folder_error"), bundle.getString("config_error"), JOptionPane.ERROR_MESSAGE);
            return false;
        }
        // no of copies
        if (StringUtils.isBlank(jTextField1.getText())) {
            JOptionPane.showMessageDialog(this, bundle.getString("missing_no_of_copies"), bundle.getString("missing_input"), JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            cgParams.setNoOfCopies(Integer.parseInt(jTextField1.getText()));
        }
        return true;
    }

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (copiesGenerator.cancel(true)) {
            copiesGenerator = null;
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        if (StringUtils.isBlank(jTextField7.getText())) {
            JOptionPane.showMessageDialog(this, bundle.getString("no_input_folder"), bundle.getString("config_error"), JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                File input = new File(jTextField6.getText().trim());
                if (!input.exists()) {
                    JOptionPane.showMessageDialog(this, bundle.getString("no_input_folder"), bundle.getString("config_error"), JOptionPane.ERROR_MESSAGE);
                } else {
                    int res = JOptionPane.showConfirmDialog(null, MessageFormat.format(bundle.getString("clean_question"), jTextField6.getText().trim()), bundle.getString("clean_title"),
                            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                    if (res == 0) { // YES
                        FileUtils.cleanDirectory(input);
                        JOptionPane.showMessageDialog(this, bundle.getString("clean_success"), bundle.getString("success"), JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            } catch (IOException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, bundle.getString("clean_error"), bundle.getString("error"), JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        if (StringUtils.isBlank(jTextField7.getText())) {
            JOptionPane.showMessageDialog(this, bundle.getString("no_output_folder"), bundle.getString("config_error"), JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                File output = new File(jTextField7.getText());
                if (!output.exists()) {
                    JOptionPane.showMessageDialog(this, bundle.getString("no_output_folder"), bundle.getString("config_error"), JOptionPane.ERROR_MESSAGE);
                } else {
                    int res = JOptionPane.showConfirmDialog(null, MessageFormat.format(bundle.getString("clean_question"), jTextField7.getText().trim()), bundle.getString("clean_title"),
                            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                    if (res == 0) { // YES
                        FileUtils.cleanDirectory(output);
                        JOptionPane.showMessageDialog(this, bundle.getString("clean_success"), bundle.getString("success"), JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            } catch (IOException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, bundle.getString("clean_error"), bundle.getString("error"), JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        if (StringUtils.isBlank(jTextField12.getText())) {
            JOptionPane.showMessageDialog(this, bundle.getString("missing_shutdown_time"), bundle.getString("input_missing"), JOptionPane.ERROR_MESSAGE);
        } else {
            Integer time = Integer.parseInt(jTextField12.getText()) * 60;
            String shutdownCommand = "shutdown.exe -s -t " + time;
            try {
                Runtime.getRuntime().exec(shutdownCommand);
                JOptionPane.showMessageDialog(this, bundle.getString("schedule_shutdown_success"), bundle.getString("success"), JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, bundle.getString("schedule_shutdown_fail"), bundle.getString("error"), JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        String cancelShutdownCommand = "shutdown.exe /a";
        try {
            Runtime.getRuntime().exec(cancelShutdownCommand);
            JOptionPane.showMessageDialog(this, bundle.getString("cancel_shutdown_success"), bundle.getString("success"), JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, bundle.getString("cancel_shutdown_fail"), bundle.getString("error"), JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        initGKBForCoorCapturing();
        mouseDetector = new MouseDetector();
        mouseDetector.setMdParams(mdParams);
        mouseDetector.execute();
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        keyboardHook.shutdownHook();
        activeJTextField = null;
        mouseDetector.cancel(true);
    }//GEN-LAST:event_jButton17ActionPerformed

    private void setActiveJTextField(java.awt.event.FocusEvent evt) {
        activeJTextField = (JTextField) evt.getSource();
    }

    private void resetActiveJTextField(java.awt.event.FocusEvent evt) {
        if (activeJTextField == evt.getSource()) {
            activeJTextField = null;
        }
    }

    private void jTextField17FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField17FocusGained
        setActiveJTextField(evt);
    }//GEN-LAST:event_jTextField17FocusGained

    private void jTextField3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField3FocusGained
        setActiveJTextField(evt);
    }//GEN-LAST:event_jTextField3FocusGained

    private void jTextField5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField5FocusGained
        setActiveJTextField(evt);
    }//GEN-LAST:event_jTextField5FocusGained

    private void jTextField8FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField8FocusGained
        setActiveJTextField(evt);
    }//GEN-LAST:event_jTextField8FocusGained

    private void jTextField13FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField13FocusGained
        setActiveJTextField(evt);
    }//GEN-LAST:event_jTextField13FocusGained

    private void jTextField14FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField14FocusGained
        setActiveJTextField(evt);
    }//GEN-LAST:event_jTextField14FocusGained

    private void jTextField11FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField11FocusGained
        setActiveJTextField(evt);
    }//GEN-LAST:event_jTextField11FocusGained

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle(bundle.getString("choose_output"));
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fc.setAcceptAllFileFilterUsed(false);
        if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            jTextField19.setText(fc.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void initMDParams() {
        mdParams = new MouseDetectorParams();
        mdParams.setjTextArea(jTextArea3);
        mdParams.setStartJButton(jButton16);
        mdParams.setStopJButton(jButton17);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WCT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WCT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WCT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WCT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WCT().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPanel jPanel0;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables

    private CopiesGenerator copiesGenerator;
    private CopiesGeneratorParams cgParams;
    private MouseDetector mouseDetector;
    private MouseDetectorParams mdParams;
    private FileSender fileSender;
    private FileSenderParams fsParams;
    private TextSender textSender;
    private TextSenderParams tsParams;
    private ResourceBundle bundle;

    // used for configuration
    private JTextField activeJTextField;
    private GlobalKeyboardHook keyboardHook;

    /**
     * Creates new form WCT
     */
    public WCT() {
        bundle = LanguageHandler.getInstance().getBundle();
        initComponents();
        initMyComponents();
    }

    private void initMyComponents() {
        centerWindow(this);
        // load configuration if possible
        Configuration config = null;
        try {
            config = ConfigurationHandler.getConfig();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        if (config != null) {
            jTextField6.setText(config.getInputFolder());
            jTextField7.setText(config.getOutputFolder());
            jTextField19.setText(config.getCleanFolder());
            jTextField21.setText(config.getCleanAfterSending());
            jCheckBox1.setSelected(config.isIsClean());
            jTextField17.setText(config.getOnTaskbarCoordinate());
            jTextField10.setText(config.getGroupsInRegion());
            jTextField5.setText(config.getCorner1());
            jTextField8.setText(config.getCorner2());
            jTextField13.setText(config.getCorner3());
            jTextField14.setText(config.getCorner4());
            jTextField3.setText(config.getScroll1());
            jTextField11.setText(config.getScroll2());
            jTextField18.setText(config.getTimesToBottom());
            initDefaultUIValues(config);
        }
        initFSParam();
        initCGParams();
        initTSParams();
        initMDParams();
    }

    private void initGKBForCoorCapturing() {
        keyboardHook = new GlobalKeyboardHook(true);
        keyboardHook.addKeyListener(new GlobalKeyAdapter() {
            @Override
            public void keyReleased(GlobalKeyEvent event) {
                if (event.getVirtualKeyCode() == GlobalKeyEvent.VK_CONTROL) {
                    // set coordinate or selected color to text field
                    if (activeJTextField != null) {
                        PointerInfo pi = MouseInfo.getPointerInfo();
                        Point p = pi.getLocation();
                        String s = p.x + " " + p.y;
                        activeJTextField.setText(s);
                    }
                }
            }
        });
    }

    private void createGKBForStop() {
        keyboardHook = new GlobalKeyboardHook(true);
        keyboardHook.addKeyListener(new GlobalKeyAdapter() {
            @Override
            public void keyReleased(GlobalKeyEvent event) {
                if (event.getVirtualKeyCode() == GlobalKeyEvent.VK_F10) {
                    stopFileSender();
                    stopTextSender();
                    keyboardHook.shutdownHook();
                }
            }
        });
    }

    private void centerWindow(Window frame) {
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - frame.getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - frame.getHeight()) / 2);
        frame.setLocation(x, y);
    }

    private void setPanel(int panelId) {
        jPanel0.removeAll();
        jPanel0.repaint();
        jPanel0.revalidate();
        switch (panelId) {
            case 1: {
                jPanel0.add(jPanel1);
                jPanel0.repaint();
                jPanel0.revalidate();
                break;
            }
            case 2: {
                jPanel0.add(jPanel2);
                jPanel0.repaint();
                jPanel0.revalidate();
                break;
            }
            case 3: {
                jPanel0.add(jPanel3);
                jPanel0.repaint();
                jPanel0.revalidate();
                break;
            }
            default:
                break;
        }
    }

    private DefaultComboBoxModel loadComboboxModel() {
        String[] model = new String[]{bundle.getString("from_beginning"), bundle.getString("continue")};
//        System.out.println(model[0] + "; " + model[1]);
        return new DefaultComboBoxModel(model);
    }

    private void initDefaultUIValues(Configuration config) {
        Integer default1 = Integer.parseInt(config.getGroupsInRegion()) * 5;
        jTextField2.setText("1000");
        jTextField15.setText(default1.toString());
        jTextField4.setText("1000");
        jTextField16.setText(default1.toString());
    }
}
